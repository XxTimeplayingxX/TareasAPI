// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TareasAPI.DATA;

#nullable disable

namespace TareasAPI.Migrations
{
    [DbContext(typeof(TareasDbContext))]
    [Migration("20240219204554_PrimeraMigracion")]
    partial class PrimeraMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TareasAPI.MODELS.DetalleProfesor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ProfesorID")
                        .HasColumnType("int");

                    b.Property<int>("TareaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProfesorID");

                    b.HasIndex("TareaID");

                    b.ToTable("DetalleProfesores");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ProfesorID = 1,
                            TareaID = 1
                        });
                });

            modelBuilder.Entity("TareasAPI.MODELS.DetalleTarea", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("EstudianteID")
                        .HasColumnType("int");

                    b.Property<int>("TareaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EstudianteID");

                    b.HasIndex("TareaID");

                    b.ToTable("DetalleTareas");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EstudianteID = 1,
                            TareaID = 1
                        });
                });

            modelBuilder.Entity("TareasAPI.MODELS.Estudiante", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Materia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Estudiantes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Activo = true,
                            Materia = "Backend",
                            Nombre = "David Sánchez"
                        });
                });

            modelBuilder.Entity("TareasAPI.MODELS.Profesor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Materia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Profesores");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Edad = 30,
                            Materia = "Backend",
                            Name = "Gustavo Lozada"
                        });
                });

            modelBuilder.Entity("TareasAPI.MODELS.Tarea", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Atrasado")
                        .HasColumnType("bit");

                    b.Property<string>("Materia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tareas");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Atrasado = true,
                            Materia = "Backend"
                        });
                });

            modelBuilder.Entity("TareasAPI.MODELS.DetalleProfesor", b =>
                {
                    b.HasOne("TareasAPI.MODELS.Profesor", "Profesor")
                        .WithMany()
                        .HasForeignKey("ProfesorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TareasAPI.MODELS.Tarea", "Tarea")
                        .WithMany()
                        .HasForeignKey("TareaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profesor");

                    b.Navigation("Tarea");
                });

            modelBuilder.Entity("TareasAPI.MODELS.DetalleTarea", b =>
                {
                    b.HasOne("TareasAPI.MODELS.Estudiante", "Estudiante")
                        .WithMany()
                        .HasForeignKey("EstudianteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TareasAPI.MODELS.Tarea", "Tarea")
                        .WithMany()
                        .HasForeignKey("TareaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");

                    b.Navigation("Tarea");
                });
#pragma warning restore 612, 618
        }
    }
}
